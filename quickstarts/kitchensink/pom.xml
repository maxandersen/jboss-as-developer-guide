<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>org.jboss.as.quickstarts</groupId>
   <artifactId>jboss-as-kitchensink</artifactId>
   <version>7.0.0-SNAPSHOT</version>
   <packaging>war</packaging>

   <name>JBoss AS Quickstarts: Kitchensink</name>
   <description>A starter Java EE 6 webapp project for use on JBoss AS 7, generated from the jboss-javaee6-webapp archetype</description>

   <properties>
      <!-- Explicitly declaring the source encoding eliminates the following 
         message: -->
      <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
         resources, i.e. build is platform dependent! -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <!-- Timestamp format for the maven.build.timestamp property -->
      <!-- You can reference property in pom.xml or filtered resources (must 
         enable third-party plugin if using Maven < 2.1) -->
      <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
      <!-- Specify the JBoss AS directory to be the JBOSS_HOME environment 
         variable -->
      <jboss.home>${env.JBOSS_HOME}</jboss.home>
      <!-- externalize versions we need to refer to more than once -->
      <jboss-javaee6-spec.version>2.0.0.Beta1</jboss-javaee6-spec.version>
   </properties>

   <repositories>
      <!-- The JBoss Community public repository is a composite repository 
         of several major repositories -->
      <!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
      <repository>
         <id>jboss-public-repository</id>
         <name>JBoss Repository</name>
         <url>http://repository.jboss.org/nexus/content/groups/public</url>
         <!-- These optional flags are designed to speed up your builds by 
            reducing remote server calls -->
         <releases>
            <enabled>false</enabled>
         </releases>
         <snapshots>
            <enabled>false</enabled>
         </snapshots>
      </repository>
   </repositories>

   <pluginRepositories>
      <pluginRepository>
         <id>jboss-public-repository</id>
         <name>JBoss Repository</name>
         <url>http://repository.jboss.org/nexus/content/groups/public</url>
         <releases>
            <enabled>false</enabled>
         </releases>
         <snapshots>
            <enabled>false</enabled>
         </snapshots>
      </pluginRepository>
   </pluginRepositories>

   <dependencies>
      <!-- Annotation processor to generate the JPA 2.0 metamodel classes 
         for typesafe criteria queries -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-jpamodelgen</artifactId>
         <version>1.1.1.Final</version>
         <scope>provided</scope>
         <!-- Excluded because it's provided by the Java EE 6 dependencies -->
         <exclusions>
            <exclusion>
               <groupId>org.hibernate.javax.persistence</groupId>
               <artifactId>hibernate-jpa-2.0-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <!-- Seam Solder provides convenient, portable CDI extensions such 
         as an injectable logger -->
      <dependency>
         <groupId>org.jboss.seam.solder</groupId>
         <artifactId>seam-solder</artifactId>
         <version>3.0.0.Final</version>
      </dependency>

      <!-- JSR-303 (Bean Validation) Implementation -->
      <!-- Provides portable constraints such as @Email -->
      <!-- Hibernate Validator is shipped in JBoss AS 7 -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-validator</artifactId>
         <version>4.1.0.Final</version>
         <scope>provided</scope>
         <exclusions>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <!-- Needed for running tests (you may also use TestNG) -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.8.1</version>
         <scope>test</scope>
      </dependency>

      <!-- Optional, but highly recommended -->
      <!-- Arquillian allows you to test enterprise code such as EJBs and 
         Transactional(JTA) JPA from JUnit/TestNG -->
      <dependency>
         <groupId>org.jboss.arquillian.junit</groupId>
         <artifactId>arquillian-junit-container</artifactId>
         <version>1.0.0.Beta2</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <!-- Maven will append the version to the finalName (which is the name 
         given to the generated war, and hence the context root) -->
      <finalName>jboss-as-kitchensink</finalName>
      <plugins>
         <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
            annotation processors -->
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.1</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
               <!-- Java EE 6 doesn't require web.xml, Maven needs to catch 
                  up! -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <!-- The default profile skips all tests, though you can tune it 
            to run just unit tests based on a custom pattern -->
         <!-- Seperate profiles are provided for running all tests, including 
            Arquillian tests that execute in the specified container -->
         <id>default</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <!-- Java EE 6 API dependency -->
            <!-- This one dependency imports all APIs available for a Java 
               EE 6.0 application -->
            <dependency>
               <groupId>org.jboss.spec</groupId>
               <artifactId>jboss-javaee-6.0</artifactId>
               <version>${jboss-javaee6-spec.version}</version>
               <type>pom</type>
               <scope>provided</scope>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>2.4.3</version>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>
               <!-- The JBoss AS plugin deploys your war to a local JBoss 
                  AS container -->
               <!-- To use, set the JBOSS_HOME environment variable and run: 
                  mvn package jboss-as:deploy -->
               <plugin>
                  <groupId>org.jboss.as.plugins</groupId>
                  <artifactId>jboss-as-deploy-plugin</artifactId>
                  <version>7.0.0.Beta3</version>
                  <executions>
                     <execution>
                        <phase>install</phase>
                        <goals>
                           <goal>deploy</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <!-- An optional Arquillian testing profile that executes tests 
            in a remote JBoss AS instance -->
         <!-- Run with: mvn clean test -Parq-jbossas-remote -->
         <id>arq-jbossas-remote</id>
         <dependencies>
            <dependency>
               <groupId>org.jboss.as</groupId>
               <artifactId>jboss-as-arquillian-container-managed</artifactId>
               <version>7.0.0.Beta4-SNAPSHOT</version>
               <scope>test</scope>
            </dependency>
            <!-- Java EE 6 API dependency -->
            <!-- This one dependency imports all APIs available for a Java 
               EE 6.0 application -->
            <dependency>
               <groupId>org.jboss.spec</groupId>
               <artifactId>jboss-javaee-6.0</artifactId>
               <version>${jboss-javaee6-spec.version}</version>
               <type>pom</type>
               <scope>provided</scope>
            </dependency>
         </dependencies>
      </profile>

   </profiles>
</project>
